generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  password  String
  role      String   @default("customer")
  createdAt DateTime @default(now())
  cartItems Cart[]
  orders    Order[]
  reviews   Review[]
}

model Category {
  id          String    @id @default(uuid()) @db.Uuid
  name        String    @unique
  description String?
  imageUrl    String?
  imagePath   String?
  products    Product[]
}

model Season {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id           String   @id @default(uuid()) @db.Uuid
  name         String
  description  String
  price        Float
  stock        Int
  categoryId   String      @db.Uuid
  createdAt    DateTime    @default(now())
  seasonId     String?     @db.Uuid
  updatedAt    DateTime    @updatedAt
  brandId      String?     @db.Uuid
  colors       String[]
  materials    String[]
  sizes        String[]
  subscription Boolean     @default(false)
  imageUrls    String[]
  cartItems    Cart[]
  orderItems   OrderItem[]
  brand        Brand?      @relation(fields: [brandId], references: [id])
  category     Category    @relation(fields: [categoryId], references: [id])
  season       Season?     @relation(fields: [seasonId], references: [id])
  reviews      Review[]
}

model Order {
  id          String      @id @default(uuid()) @db.Uuid
  userId      String      @db.Uuid
  totalAmount Float
  status      String      @default("pending")
  createdAt   DateTime    @default(now())
  user        User        @relation(fields: [userId], references: [id])
  items       OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid()) @db.Uuid
  orderId   String  @db.Uuid
  productId String  @db.Uuid
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Review {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  productId String   @db.Uuid
  rating    Int      @default(5)
  comment   String?
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Cart {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  productId String   @db.Uuid
  quantity  Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Brand {
  id       String    @id @default(uuid()) @db.Uuid
  imageUrl String?
  name     String    @unique
  products Product[]
}

model SocialMedia {
  id        String  @id @default(uuid()) @db.Uuid
  imagePath String?
  name      String  @default("Default Name")
}
